"====================Vim config file(.vimrc)===================
"Authored by Fity(imfity@gmail.com)
"
set shell=/bin/zsh
"====================for vundle======================
set nocompatible              " be iMproved, required
filetype off                  " required

if has("autocmd")
    autocmd BufReadPost * if line("'\"") && line("'\"") <= line("$") | exe "normal `\"" | endif
endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

"--------------------my own vundles--------------------
"Plugin 'nvie/vim-flake8', {'rtp': 'ftplugin'}
Bundle 'Valloric/YouCompleteMe'
Bundle 'davidhalter/jedi'
Bundle 'scrooloose/syntastic'
Bundle 'ntpeters/vim-better-whitespace'
Bundle 'kien/rainbow_parentheses.vim'
Bundle 'hynek/vim-python-pep8-indent'

Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-surround'
" Plugin 'godlygeek/tabular'
" Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'bling/vim-airline'
Plugin 'airblade/vim-gitgutter'
Plugin 'Lokaltog/vim-easymotion'
" Bundle 'tmhedberg/SimpylFold'
Bundle 'scrooloose/nerdtree'
Bundle 'jistr/vim-nerdtree-tabs'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Bundle 'Yggdroot/indentLine'
" need ctags to be installed(brew install ctags
Bundle 'kien/ctrlp.vim'
Bundle 'mileszs/ack.vim'
" Bundle 'terryma/vim-multiple-cursors'
" Bundle 'SirVer/ultisnips'
" Bundle 'sjl/gundo.vim'
" Bundle 'mhinz/vim-startify'
" for git
Plugin 'tpope/vim-git'
Plugin 'tpope/vim-fugitive'
Plugin 'parkr/vim-jekyll'
" theme and syntax
Plugin 'solarnz/thrift.vim'
Plugin 'plasticboy/vim-markdown'
Bundle 'tomasr/molokai'
Bundle 'altercation/vim-colors-solarized'
" Bundle 'hdima/python-syntax'
" extra tools
Bundle 'vimwiki/vimwiki'
Bundle 'wakatime/vim-wakatime'
"--------------------my own vundles end--------------------

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
"====================Basic config====================
if $TERM == "xterm-256color" || $TERM == "screen-256color" || $COLORTERM == "gnome-terminal"
  set t_Co=256
endif
" remove intro messages
set shortmess=I

syntax enable
set nobackup
set noswapfile
set history=1024
" auto read file when the file is changed outside vim
set autoread
set backspace=2
set modeline

"set iskeyword=@,48-57,192-255

set encoding=utf-8
set fileencoding=utf-8
set number
" set list
set hidden

set title
" set spell
nnoremap <space> gv

" search related
set incsearch
set ignorecase
set smartcase
" set hlsearch
set nohlsearch

" colorscheme, dark or light
set background=dark
let g:solarized_termcolors=256
colorscheme solarized
" colorscheme molokai
" let g:molokai_original = 1
set showcmd
set showmatch
runtime macros/matchit.vim

" set textwidth=79

set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab

" highlight the specific column
set colorcolumn=80
" set cursorline
" set cursorcolumn

" command line complete
set wildmenu
set wildmode=full
" Ignore compiled files
set wildignore=*.o,*~,*.pyc,.git\*,.hg\*,.svn\*

" Height of the command bar
" set cmdheight=2
" code fold using indent(available: manual, indent, expr, syntax, diff,
" marker)
set foldmethod=syntax
set foldlevel=3
" ignore number format(0x9 will not be treat as hex, nor do the 07 as octal
"set nrformats=
"set pastetoggle=<f5>
" used for indent_guide
let g:indent_guides_guide_size=1

" status line / power line
set laststatus=2

" options when edit the crontab file
if $VIM_CRONTAB == "true"
    set nobackup
    set nowritebackup
endif
"====================Basic config end====================

"====================key/expr maps for convenient edit====================
let mapleader=','
let maplocalleader = '\\'
nnoremap <silent> <Leader>ve :e $MYVIMRC<CR>
nnoremap <silent> <Leader>vs :source $MYVIMRC<CR>

"vim command line config
cnoremap <C-a>  <Home>
cnoremap <C-b>  <Left>
cnoremap <C-f>  <Right>
cnoremap <C-d>  <Delete>
cnoremap <M-b>  <S-Left>
cnoremap <M-f>  <S-Right>
cnoremap <M-d>  <S-right><Delete>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>
cnoremap <Esc>d <S-right><Delete>
cnoremap <C-g>  <C-c>
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <expr> %% getcmdtype( ) == ':' ? expand('%:h').'/' : '%%'

nnoremap <S-H> gT
nnoremap <S-L> gt
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-H> <C-W>h
nnoremap <C-l> <C-W>l
nnoremap <Leader>t <C-W><S-T>

nnoremap ; :

"--------------------key map for VIM-easymotion--------------------
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

" line motion
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)
let g:EasyMotion_startofline = 0

let g:EasyMotion_smartcase = 1
"--------------------key map for VIM-easymotion end--------------------
"====================key/expr maps end====================

"====================Custom Commands=====================
cnoremap w!! w !sudo tee % >/dev/null
"========================================================

"====================note config====================
augroup markdown_preview
    autocmd!
    autocmd FileType mkd map <Leader>p :!open -a /Applications/Google\ Chrome.app/ "%:p" <CR>
augroup end
let vim_markdown_initial_foldlevel=99
" vimwiki options
let g:vimwiki_menu = ''
" let g:vimwiki_list = [{'path': '~/vimwiki/wiki', 'path_html': '~/vimwiki/wiki/html', 'syntax': 'markdown', 'ext': '.md'}]
" vim-jekyll configurations
let g:jekyll_post_extension = '.md'
"====================note config end====================

"====================Coding config====================
set autoindent
set smartindent
filetype on
filetype plugin on
filetype plugin indent on
filetype indent on
" no expandtab when editting makefile
augroup make_group
    autocmd FileType make set noexpandtab
augroup end

" auto complement
set infercase

" Better Rainbow Parentheses configurations
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0
augroup rainbow_group
    autocmd VimEnter * RainbowParenthesesToggle
    autocmd Syntax * RainbowParenthesesLoadRound
    autocmd Syntax * RainbowParenthesesLoadSquare
augroup end

" YouCompleteMe configurations
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_key_invoke_completion = ''
let g:ycm_complete_in_comments = 1
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_autoclose_preview_window_after_completion = 1
"let g:ycm_autoclose_preview_window_after_insertion = 1
"
" syntastic settings
let g:syntastic_ignore_files=[".*\.tex$"]
let g:syntastic_python_checkers=['pyflakes']

" vim better whitespace settings
let g:better_whitespace_filetypes_blacklist=['mkd', 'tex']
" autocmd BufWritePre <buffer> StripWhitespace
autocmd FileType * autocmd BufWritePre <buffer> StripWhitespace
" set indent line
let g:indentLine_char = '|'
nnoremap <Leader>f :CtrlPBufTag<CR>

"--------------------Python configuration--------------------
let python_highlight_all = 1
let python_folding = 1
autocmd FileType python nmap <F5> :!python %<CR>
"--------------------Python configuration end--------------------
let NERDTreeMinimalUI = 1
" default to 1, use +/- if set to 0
let NERDTreeDirArrows = 1
" show hidden files in nerdtree, use I to switch in nerdtree window
" let NERDTreeShowHidden=1
" nerdcommenter option, use 2 space between code and its comments
let g:NERDSpaceDelims = 2
let g:NERDTreeIgnore = ['\.pyc$']
nmap <Leader>e :NERDTreeTabsToggle<CR>
" open netdtree by default
" let g:nerdtree_tabs_open_on_console_startup=1
let g:gitgutter_max_signs = 1024 " default 500
"====================Coding config end====================
" testing options
