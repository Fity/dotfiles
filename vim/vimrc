scriptencoding utf-8
set shell=/bin/zsh
" ==============================================================================
" Fity's vimrc, use vim-plug to mantain plugins
" Blog: http://fity.info
" Github: https://github.com/fity
" ==============================================================================

" global settings
set nocompatible
set encoding=utf-8
set fileencoding=utf-8
" ignore introduction messages
set shortmess=I
set nobackup
set noswapfile
set history=1024
set backspace=2

" global general key mappings
let mapleader = ','
let maplocalleader=','
map ; :
cnoremap w!! w !sudo tee % >/dev/null
" shortcuts for maintaining vimrc
nnoremap <silent> <Leader>ve :e $MYVIMRC<CR>
nnoremap <silent> <Leader>vs :source $MYVIMRC<CR>

" plug settings
call plug#begin('~/.vim/bundle')
" my plugins
" theme and appearance
Plug 'tomasr/molokai'
Plug 'altercation/vim-colors-solarized'
Plug 'bling/vim-airline'
Plug 'airblade/vim-gitgutter'
Plug 'Yggdroot/indentLine'
let g:indent_guides_guide_size=1
let g:indentLine_char = '|'

" ============================================================
" text editing related
Plug 'Lokaltog/vim-easymotion'
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)
" easymotion line motion
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)
let g:EasyMotion_startofline = 0
let g:EasyMotion_smartcase = 1

Plug 'tpope/vim-surround'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'Xuyuanp/nerdtree-git-plugin'
let NERDTreeMinimalUI = 1
" default to 1, use +/- if set to 0
let NERDTreeDirArrows = 1
" show hidden files in nerdtree, use I to switch in nerdtree window
" let NERDTreeShowHidden=1
" nerdcommenter option, use 2 space between code and its comments
let g:NERDSpaceDelims = 2
let g:NERDTreeIgnore = ['\.pyc$']
nmap <Leader>e :NERDTreeTabsToggle<CR>
" open netdtree by default
" let g:nerdtree_tabs_open_on_console_startup=1
let g:gitgutter_max_signs = 1024 " default 500

" ============================================================
" general coding related
Plug 'kien/ctrlp.vim'
nnoremap <Leader>f :CtrlPBufTag<CR>

Plug 'scrooloose/nerdcommenter'
Plug 'ntpeters/vim-better-whitespace'
" let g:better_whitespace_filetypes_blacklist=['mkd', 'tex']
" autocmd BufWritePre <buffer> StripWhitespace
autocmd FileType python autocmd BufWritePre <buffer> StripWhitespace
Plug 'kien/rainbow_parentheses.vim'
" Better Rainbow Parentheses configurations
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0
augroup rainbow_group
    autocmd VimEnter * RainbowParenthesesToggle
    autocmd Syntax * RainbowParenthesesLoadRound
    autocmd Syntax * RainbowParenthesesLoadSquare
augroup end

Plug 'tpope/vim-fugitive'
Plug 'Valloric/YouCompleteMe'
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_key_invoke_completion = ''
let g:ycm_complete_in_comments = 1
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_goto_buffer_command = 'vertical-split'
"let g:ycm_autoclose_preview_window_after_insertion = 1
nnoremap <leader>g :YcmCompleter GoToDeclaration<CR>

Plug 'scrooloose/syntastic'
let g:syntastic_ignore_files=[".*\.tex$"]
" let g:syntastic_python_checkers=['pyflakes']
let g:syntastic_python_checkers=['flake8']

" ============================================================
" specific coding related
Plug 'hynek/vim-python-pep8-indent'

" ============================================================
" syntax files
Plug 'solarnz/thrift.vim'
Plug 'plasticboy/vim-markdown'
let vim_markdown_initial_foldlevel=99

" ============================================================
" extra
" Bundle 'vimwiki/vimwiki'
" vimwiki options
" let g:vimwiki_menu = ''
" let g:vimwiki_list = [{'path': '~/vimwiki/wiki', 'path_html': '~/vimwiki/wiki/html', 'syntax': 'markdown', 'ext': '.md'}]
Plug 'parkr/vim-jekyll'
" let g:jekyll_post_extension = '.md'
" vim-jekyll configurations
Plug 'wakatime/vim-wakatime'
" not used now
" Plugin 'tacahiroy/ctrlp-funky'
" " Bundle 'terryma/vim-multiple-cursors'
" " Bundle 'SirVer/ultisnips'
" " Bundle 'sjl/gundo.vim'
" " Bundle 'mhinz/vim-startify'
" " Plugin 'godlygeek/tabular'
call plug#end()

" theme setting
set background=dark
let g:solarized_termcolors=256
colorscheme solarized
" needed for vim-airline
set laststatus=2
" Height of the command bar
" set cmdheight=2

set wildmenu
set wildmode=full
" Ignore compiled files
set wildignore=*.o,*~,*.pyc,.git\*,.hg\*,.svn\*
" set textwidth=79
set modeline
set hidden
set title
" set spell
set incsearch
set ignorecase
set smartcase
" set hlsearch
set nohlsearch
set showcmd
set showmatch
runtime macros/matchit.vim

" set list
set number
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab

" highlight the max column limit
set colorcolumn=80
" set cursorline
" set cursorcolumn

set foldmethod=syntax
set foldlevel=3
" ignore number format(0x9 will not be treat as hex, nor do the 07 as octal
"set nrformats=
"set pastetoggle=<f5>

"vim command line config
cnoremap <C-a>  <Home>
cnoremap <C-b>  <Left>
cnoremap <C-f>  <Right>
cnoremap <C-d>  <Delete>
cnoremap <M-b>  <S-Left>
cnoremap <M-f>  <S-Right>
cnoremap <M-d>  <S-right><Delete>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>
cnoremap <Esc>d <S-right><Delete>
cnoremap <C-g>  <C-c>
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <expr> %% getcmdtype( ) == ':' ? expand('%:h').'/' : '%%'

" window and tab navigating shortcuts
nnoremap <S-H> gT
nnoremap <S-L> gt
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-H> <C-W>h
nnoremap <C-l> <C-W>l
nnoremap <Leader>t <C-W><S-T>

" coding prefered settings
set autoindent
set smartindent
filetype on
filetype plugin on
filetype plugin indent on
filetype indent on
" auto complement related
set infercase

" python syntax file settings
let python_highlight_all = 1
let python_folding = 1
autocmd FileType python nmap <F5> :!python %<CR>

" options when edit the crontab file
if $VIM_CRONTAB == "true"
    set nobackup
    set nowritebackup
endif

" user defined autogroups
augroup make_group
    autocmd FileType make set noexpandtab
augroup end

augroup markdown_preview
    autocmd!
    autocmd FileType mkd map <Leader>p :!open -a /Applications/Google\ Chrome.app/ "%:p" <CR>
augroup end

